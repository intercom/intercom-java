/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.intercom.api.resources.customchannelevents;

import com.intercom.api.core.ClientOptions;
import com.intercom.api.core.RequestOptions;
import java.util.concurrent.CompletableFuture;

public class AsyncCustomChannelEventsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawCustomChannelEventsClient rawClient;

    public AsyncCustomChannelEventsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawCustomChannelEventsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawCustomChannelEventsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Void> notifyAttributeCollected() {
        return this.rawClient.notifyAttributeCollected().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> notifyAttributeCollected(RequestOptions requestOptions) {
        return this.rawClient.notifyAttributeCollected(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> notifyNewMessage() {
        return this.rawClient.notifyNewMessage().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> notifyNewMessage(RequestOptions requestOptions) {
        return this.rawClient.notifyNewMessage(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> notifyNewConversation() {
        return this.rawClient.notifyNewConversation().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> notifyNewConversation(RequestOptions requestOptions) {
        return this.rawClient.notifyNewConversation(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> notifyQuickReplySelected() {
        return this.rawClient.notifyQuickReplySelected().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> notifyQuickReplySelected(RequestOptions requestOptions) {
        return this.rawClient.notifyQuickReplySelected(requestOptions).thenApply(response -> response.body());
    }
}
