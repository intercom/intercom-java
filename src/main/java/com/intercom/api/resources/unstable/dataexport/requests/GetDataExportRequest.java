/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.intercom.api.resources.unstable.dataexport.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.intercom.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetDataExportRequest.Builder.class)
public final class GetDataExportRequest {
    private final String jobIdentifier;

    private final Map<String, Object> additionalProperties;

    private GetDataExportRequest(String jobIdentifier, Map<String, Object> additionalProperties) {
        this.jobIdentifier = jobIdentifier;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return job_identifier
     */
    @JsonProperty("job_identifier")
    public String getJobIdentifier() {
        return jobIdentifier;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetDataExportRequest && equalTo((GetDataExportRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetDataExportRequest other) {
        return jobIdentifier.equals(other.jobIdentifier);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.jobIdentifier);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static JobIdentifierStage builder() {
        return new Builder();
    }

    public interface JobIdentifierStage {
        /**
         * job_identifier
         */
        _FinalStage jobIdentifier(@NotNull String jobIdentifier);

        Builder from(GetDataExportRequest other);
    }

    public interface _FinalStage {
        GetDataExportRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements JobIdentifierStage, _FinalStage {
        private String jobIdentifier;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GetDataExportRequest other) {
            jobIdentifier(other.getJobIdentifier());
            return this;
        }

        /**
         * job_identifier<p>job_identifier</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("job_identifier")
        public _FinalStage jobIdentifier(@NotNull String jobIdentifier) {
            this.jobIdentifier = Objects.requireNonNull(jobIdentifier, "jobIdentifier must not be null");
            return this;
        }

        @java.lang.Override
        public GetDataExportRequest build() {
            return new GetDataExportRequest(jobIdentifier, additionalProperties);
        }
    }
}
