/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.intercom.api.resources.unstable.articles;

import com.intercom.api.core.ClientOptions;
import com.intercom.api.core.RequestOptions;
import com.intercom.api.resources.unstable.articles.requests.DeleteArticleRequest;
import com.intercom.api.resources.unstable.articles.requests.RetrieveArticleRequest;
import com.intercom.api.resources.unstable.articles.requests.SearchArticlesRequest;
import com.intercom.api.resources.unstable.articles.types.Article;
import com.intercom.api.resources.unstable.articles.types.ArticleSearchResponse;
import com.intercom.api.resources.unstable.types.ArticleList;
import com.intercom.api.resources.unstable.types.DeletedArticleObject;

public class ArticlesClient {
    protected final ClientOptions clientOptions;

    private final RawArticlesClient rawClient;

    public ArticlesClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawArticlesClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawArticlesClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * You can fetch a list of all articles by making a GET request to <code>https://api.intercom.io/articles</code>.
     * <blockquote>
     * <p>ðŸ“˜ How are the articles sorted and ordered?</p>
     * <p>Articles will be returned in descending order on the <code>updated_at</code> attribute. This means if you need to iterate through results then we'll show the most recently updated articles first.</p>
     * </blockquote>
     */
    public ArticleList listArticles() {
        return this.rawClient.listArticles().body();
    }

    /**
     * You can fetch a list of all articles by making a GET request to <code>https://api.intercom.io/articles</code>.
     * <blockquote>
     * <p>ðŸ“˜ How are the articles sorted and ordered?</p>
     * <p>Articles will be returned in descending order on the <code>updated_at</code> attribute. This means if you need to iterate through results then we'll show the most recently updated articles first.</p>
     * </blockquote>
     */
    public ArticleList listArticles(RequestOptions requestOptions) {
        return this.rawClient.listArticles(requestOptions).body();
    }

    /**
     * You can create a new article by making a POST request to <code>https://api.intercom.io/articles</code>.
     */
    public Article createArticle(Object request) {
        return this.rawClient.createArticle(request).body();
    }

    /**
     * You can create a new article by making a POST request to <code>https://api.intercom.io/articles</code>.
     */
    public Article createArticle(Object request, RequestOptions requestOptions) {
        return this.rawClient.createArticle(request, requestOptions).body();
    }

    /**
     * You can fetch the details of a single article by making a GET request to <code>https://api.intercom.io/articles/&lt;id&gt;</code>.
     */
    public Article retrieveArticle(RetrieveArticleRequest request) {
        return this.rawClient.retrieveArticle(request).body();
    }

    /**
     * You can fetch the details of a single article by making a GET request to <code>https://api.intercom.io/articles/&lt;id&gt;</code>.
     */
    public Article retrieveArticle(RetrieveArticleRequest request, RequestOptions requestOptions) {
        return this.rawClient.retrieveArticle(request, requestOptions).body();
    }

    /**
     * You can delete a single article by making a DELETE request to <code>https://api.intercom.io/articles/&lt;id&gt;</code>.
     */
    public DeletedArticleObject deleteArticle(DeleteArticleRequest request) {
        return this.rawClient.deleteArticle(request).body();
    }

    /**
     * You can delete a single article by making a DELETE request to <code>https://api.intercom.io/articles/&lt;id&gt;</code>.
     */
    public DeletedArticleObject deleteArticle(DeleteArticleRequest request, RequestOptions requestOptions) {
        return this.rawClient.deleteArticle(request, requestOptions).body();
    }

    /**
     * You can search for articles by making a GET request to <code>https://api.intercom.io/articles/search</code>.
     */
    public ArticleSearchResponse searchArticles() {
        return this.rawClient.searchArticles().body();
    }

    /**
     * You can search for articles by making a GET request to <code>https://api.intercom.io/articles/search</code>.
     */
    public ArticleSearchResponse searchArticles(SearchArticlesRequest request) {
        return this.rawClient.searchArticles(request).body();
    }

    /**
     * You can search for articles by making a GET request to <code>https://api.intercom.io/articles/search</code>.
     */
    public ArticleSearchResponse searchArticles(SearchArticlesRequest request, RequestOptions requestOptions) {
        return this.rawClient.searchArticles(request, requestOptions).body();
    }
}
